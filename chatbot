<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ChatBot - RIT FAQ Assistant</title>
    <style>
      /* (your CSS untouched) */
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      body {
        font-family: "Segoe UI", sans-serif;
        background: transparent;
        display: flex;
        flex-direction: column;
        align-items: center;
        min-height: 100vh;
      }
      .main {
            width: 100%;
            height: 100vh;
            background: linear-gradient(to top, rgba(0, 0, 0, 0.5) 50%, rgba(0, 0, 0, 0.5) 50%),
                        url('https://www.appmysite.com/blog/wp-content/uploads/2023/02/ChatGPT.png');
            background-position: center;
            background-size: cover;
            background-repeat: no-repeat;
            background-attachment: fixed;
        }
      header {
        background: linear-gradient(to right, #130f0b, #05090d);
        color: white;
        width: 100%;
        padding: 1.5rem;
        text-align: center;
        font-size: 1.8rem;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
      }
      .header-content {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;
      }
      .rit-logo {
        width: 60px;
        height: 60px;
        border-radius: 50%;
      }
      .main-heading {
        font-size: 1.8rem;
        font-weight: bold;
      }
      .subtitle {
        font-size: 1rem;
        color: #d0e1f9;
        margin-top: 5px;
      }
      .chat-container {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        background: rgb(241, 243, 239);
        margin-top: 2rem;
        width: 95%;
        max-width: 500px;
        height: 90vh;
        border-radius: 15px;
        box-shadow: transparent;
        overflow: hidden;
      }
      .messages {
        flex: 1;
        overflow-y: auto;
        padding: 1rem;
        background: transparent;
        max-height: 65vh;
      }
      .message {
        margin: 0.5rem 0;
        padding: 0.8rem 1rem;
        border-radius: 20px;
        max-width: 75%;
        line-height: 1.4;
        word-wrap: break-word;
      }
      .user {
        align-self: flex-end;
        background: linear-gradient(to right, #ff7200,#0c6fcc);
        color: #fefafa;
        border-bottom-right-radius: 0;
      }
      .bot {
        align-self: flex-start;
        background: #0c0e0f;
        color: #f8f2f2;
        border-bottom-left-radius: 0;
      }
      .message-wrapper {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
      }
      .avatar {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        margin-right: 10px;
      }
      .quick-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background: #0c1014;
        border-top: 1px solid #120909;
      }
      .quick-buttons button {
        flex: 1 1 45%;
        padding: 0.6rem;
        background: linear-gradient(to right, #f04bb9, #0c6fcc, #3c0080);
        color: #fcf9f9;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: 0.2s;
      }
      .quick-buttons button:hover {
        background: #0854a0;
      }
      .input-area {
        display: flex;
        padding: 0.8rem 1rem;
        border-top: 1px solid #3c468f;
        background: #0e0a0a;
      }
      input[type="text"] {
        flex: 1;
        padding: 0.6rem 0.9rem;
        border-radius: 20px;
        border: 1px solid #100b0b;
        outline: none;
        font-size: 1rem;
      }
      .send-btn {
        margin-left: 0.5rem;
        background: #004080;
        color: white;
        border: none;
        padding: 0.6rem 1.2rem;
        border-radius: 20px;
        font-weight: bold;
        cursor: pointer;
        transition: 0.2s;
      }
      .send-btn:hover {
        background: #002d5a;
      }
    </style>
  </head>
  <body>
    <header>
      <div class="header-content">
        <img
          src="https://media-exp1.licdn.com/dms/image/C560BAQEWV6MflrNIog/company-logo_200_200/0?e=2159024400&v=beta&t=C70ptYU7agkfG4GzTuphNF7Clinpd5rERXr3l6WHHfg"
          alt="RIT Logo"
          class="rit-logo"
        />
        <div>
          <div class="main-heading">ChatBot - RIT FAQ Assistant</div>
          <div class="subtitle">Rajalakshmi Institute of Technology</div>
        </div>
      </div>
    </header>

    <div class="chat-container">
      <div class="messages" id="messages">
        <div class="message bot">
            Hi!üëã I'm ChatBot. Ask me anything about Rajalakshmi Institute of
            Technology (RIT).
             How can i help(üíÅ) you today?
        </div>
      </div>

      <div class="quick-buttons">
        <button onclick="askQuickQuestion('Tell me about admission')">
          Admission
        </button>
        <button onclick="askQuickQuestion('Do you have hostels?')">
          Hostel
        </button>
        <button onclick="askQuickQuestion('What is the fee structure?')">
          Fees
        </button>
        <button onclick="askQuickQuestion('Is there a canteen?')">
          Canteen
        </button>
        <button onclick="askQuickQuestion('When is the library open?')">
          Library
        </button>
        <button onclick="askQuickQuestion('What about bus facilities?')">
          Bus Details
        </button>
        <button
          onclick="askQuickQuestion('Where can I get academic materials?')"
        >
          Academic Materials
        </button>
      </div>

      <div class="input-area">
        <input type="text" id="userInput" placeholder="Type your question‚Ä¶" />
        <button class="send-btn" onclick="sendMessage()">Send</button>
        <button id="micButton" class="send-btn">üé§</button>
      </div>
    </div>

    <!-- Firebase SDKs -->
    <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-database.js"></script>
    <script>
      // ‚úÖ Initialize Firebase
      firebase.initializeApp({
        apiKey: "AIzaSyDkn_2TbPvNY9vRD1ooozPYBeSNRViDcm8",
        authDomain: "rit-chatbot-c6def.firebaseapp.com",
        databaseURL:
          "https://rit-chatbot-c6def-default-rtdb.asia-southeast1.firebasedatabase.app",
        projectId: "rit-chatbot-c6def",
        storageBucket: "rit-chatbot-c6def.appspot.com",
        messagingSenderId: "146673619955",
        appId: "1:146673619955:web:2ebe675c97e6b6b6d03886",
      });

      const db = firebase.database();

      // ‚úÖ Define backend URL based on environment
      const backendUrl =
        location.hostname === "localhost"
          ? "http://localhost:3000/chat"
          : "https://rit-chatbot-backend-1.onrender.com/chat";

      // ‚úÖ Send message function
      async function sendMessage() {
        const inputEl = document.getElementById("userInput");
        const text = inputEl.value.trim();
        if (!text) return;

        addUserMessage(text);

        const botReply = await getBotResponse(text);
        addBotMessage(botReply);

        db.ref("chat-history").push().set({
          user: text,
          bot: botReply,
          timestamp: new Date().toISOString(),
        });

        inputEl.value = "";
      }

      // ‚úÖ Quick button handler
      async function askQuickQuestion(question) {
        addUserMessage(question);
        const botReply = await getBotResponse(question);
        addBotMessage(botReply);
      }

      // ‚úÖ Add user message to chat
      function addUserMessage(msg) {
        const wrap = document.createElement("div");
        wrap.className = "message-wrapper user";
        wrap.innerHTML = `
          <div class="message user">${msg}</div>
          <img class="avatar" src="https://cdn-icons-png.flaticon.com/512/3135/3135715.png">
        `;
        document.getElementById("messages").append(wrap);
        scrollToBottom();
      }

      // ‚úÖ Add bot message to chat
      function addBotMessage(msg) {
        const wrap = document.createElement("div");
        wrap.className = "message-wrapper bot";
        const linked = msg
          .replace(/(?:\r\n|\r|\n)/g, "<br>") // Convert line breaks to <br>
          .replace(
            /(https?:\/\/[^\s]+)/g,
            "<a href='$1' target='_blank'>$1</a>"
          ); // Make URLs clickable

        wrap.innerHTML = `
          <img class="avatar" src="https://cdn-icons-png.flaticon.com/512/4712/4712109.png">
          <div class="message bot">${linked}</div>
        `;
        document.getElementById("messages").append(wrap);
        scrollToBottom();
      }

      // ‚úÖ Scroll to bottom helper
      function scrollToBottom() {
        const m = document.getElementById("messages");
        m.scrollTop = m.scrollHeight;
      }

      // ‚úÖ Fetch bot response from backend
      async function getBotResponse(input) {
        try {
          const response = await fetch(backendUrl, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ message: input }),
          });
          const data = await response.json();
          return data.reply;
        } catch (error) {
          console.error("Error fetching from backend:", error);
          return "Oops! Something went wrong while connecting to the server.";
        }
      }

      // ‚úÖ Voice input setup
      const recog = new (window.SpeechRecognition ||
        window.webkitSpeechRecognition)();
      recog.lang = "en-US";
      recog.onresult = (e) => {
        document.getElementById("userInput").value = e.results[0][0].transcript;
      };
      document.getElementById("micButton").onclick = () => recog.start();
    </script>
  </body>
</html>
