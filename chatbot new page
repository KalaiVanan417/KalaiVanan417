<!DOCTYPE html> 
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>RIT FAQ Chatbot</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Segoe UI", sans-serif;
        height: 100vh;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background: url("https://4kwallpapers.com/images/walls/thumbs_2t/18683.png") no-repeat center center fixed;
        background-size: cover;
        color: #ffffff;
      }

      header {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1rem;
        background-color: rgba(0, 0, 0, 0.3);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        width: 100%;
      }

      header img {
        height: 60px;
        margin-right: 1rem;
      }

      .title {
        font-size: 1.8rem;
        font-weight: bold;
        color: #ff6600;
      }

      .subtitle {
        font-size: 1rem;
        color: #ffffff;
      }

      .chat-container {
        width: 95%;
        max-width: 650px;
        height: 75vh;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        background: rgba(255, 255, 255, 0.08);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 20px;
        padding: 1rem;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        margin-top: 2rem;
        overflow: hidden;
      }

      .messages {
        flex: 1;
        overflow-y: auto;
        width: 100%;
        padding-right: 0.5rem;
      }

      .message {
        margin: 0.5rem 0;
        padding: 0.8rem 1rem;
        border-radius: 15px;
        max-width: 75%;
        word-wrap: break-word;
        background-color: rgba(255, 255, 255, 0.08);
        backdrop-filter: blur(2px);
      }

      .user {
        align-self: flex-end;
        background-color: #ff6600;
        color: #fff;
        margin-left: auto;
      }

      .bot {
        align-self: flex-start;
        background-color: rgba(255, 255, 255, 0.15);
        color: #e0f0ff;
        margin-right: auto;
      }

      .input-area {
        display: flex;
        width: 100%;
        padding-top: 1rem;
      }

      input[type="text"] {
        flex: 1;
        padding: 0.7rem 1rem;
        border: none;
        border-radius: 20px;
        font-size: 1rem;
        outline: none;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        backdrop-filter: blur(2px);
      }

      @keyframes pulseGlow {
        0% {
          box-shadow: 0 0 10px #ff6600, 0 0 20px #ff6600;
        }
        50% {
          box-shadow: 0 0 20px #ff6600, 0 0 35px #ff6600;
        }
        100% {
          box-shadow: 0 0 10px #ff6600, 0 0 20px #ff6600;
        }
      }

      .send-btn {
        margin-left: 0.5rem;
        background: #ff6600;
        color: white;
        border: none;
        padding: 0.7rem 1rem;
        border-radius: 20px;
        cursor: pointer;
        transition: background 0.2s, box-shadow 0.3s ease-in-out;
        box-shadow: 0 0 10px #ff6600, 0 0 20px #ff6600;
        animation: pulseGlow 2s infinite;
      }

      .send-btn:hover {
        background: #e65c00;
        box-shadow: 0 0 15px #ff6600, 0 0 30px #ff6600;
      }
    </style>
  </head>
  <body>
    <header>
      <img src="https://media-exp1.licdn.com/dms/image/C560BAQEWV6MflrNIog/company-logo_200_200/0?e=2159024400&v=beta&t=C70ptYU7agkfG4GzTuphNF7Clinpd5rERXr3l6WHHfg" alt="RIT Logo" />
      <div>
        <div class="title">ChatBot - RIT FAQ Assistant</div>
        <div class="subtitle">Rajalakshmi Institute of Technology</div>
      </div>
    </header>

    <div class="chat-container">
      <div class="messages" id="messages">
        <div class="message bot">Hi! I'm your RIT Assistant. How can I help you today?</div>
      </div>

      <div class="input-area">
        <input type="text" id="userInput" placeholder="Type your question..." />
        <button class="send-btn" onclick="sendMessage()">Send</button>
        <button id="micButton" class="send-btn">ðŸŽ¤</button>
      </div>
    </div>

    <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-database.js"></script>
    <script>
      firebase.initializeApp({
        apiKey: "AIzaSyDkn_2TbPvNY9vRD1ooozPYBeSNRViDcm8",
        authDomain: "rit-chatbot-c6def.firebaseapp.com",
        databaseURL: "https://rit-chatbot-c6def-default-rtdb.asia-southeast1.firebasedatabase.app",
        projectId: "rit-chatbot-c6def",
        storageBucket: "rit-chatbot-c6def.appspot.com",
        messagingSenderId: "146673619955",
        appId: "1:146673619955:web:2ebe675c97e6b6b6d03886",
      });

      const db = firebase.database();
      const backendUrl = location.hostname === "localhost"
        ? "http://localhost:3000/chat"
        : "https://rit-chatbot-backend-1.onrender.com/chat";

      async function sendMessage() {
        const input = document.getElementById("userInput");
        const text = input.value.trim();
        if (!text) return;

        input.value = "";
        addMessage(text, "user");

        showThinking();

        const reply = await getBotReply(text);

        removeThinking();
        addMessage(reply, "bot");

        db.ref("chat-history").push().set({
          user: text,
          bot: reply,
          timestamp: new Date().toISOString(),
        });
      }

      function addMessage(msg, type) {
        const div = document.createElement("div");
        div.className = "message " + type;
        div.textContent = msg;
        document.getElementById("messages").appendChild(div);
        document.getElementById("messages").scrollTop =
          document.getElementById("messages").scrollHeight;
      }

      function showThinking() {
        const thinking = document.createElement("div");
        thinking.className = "message bot";
        thinking.id = "thinking";
        thinking.innerHTML = `<img src="https://media.tenor.com/I6kN-6X7nhAAAAAj/loading-buffering.gif" alt="Thinking..." style="height: 40px;" />`;
        document.getElementById("messages").appendChild(thinking);
        document.getElementById("messages").scrollTop =
          document.getElementById("messages").scrollHeight;
      }

      function removeThinking() {
        const think = document.getElementById("thinking");
        if (think) think.remove();
      }

      async function getBotReply(input) {
        try {
          const res = await fetch(backendUrl, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ message: input }),
          });
          const data = await res.json();
          return data.reply;
        } catch (err) {
          console.error(err);
          return "Oops! Something went wrong while connecting to the server.";
        }
      }

      const recog = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
      recog.lang = "en-US";
      recog.onresult = (e) => {
        document.getElementById("userInput").value = e.results[0][0].transcript;
      };
      document.getElementById("micButton").onclick = () => recog.start();
    </script>
  </body>
</html>
